name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CONFIG_URL: https://gist.githubusercontent.com/mbround18/d325e49f21e4d99a1ceea988458fc897/raw/showcase.json

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # BOILERPLATE - BEGIN
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ./.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: ./.github/actions/boilerplate
      # BOILERPLATE - END

      - run: yarn lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      # BOILERPLATE - BEGIN
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ./.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: ./.github/actions/boilerplate
      # BOILERPLATE - END

      - run: yarn build

  generate:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # BOILERPLATE - BEGIN
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ./.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: ./.github/actions/boilerplate
      # BOILERPLATE - END

      - name: Generate Release
        env:
          NODE_ENV: production
        run: yarn generate
      - uses: actions/upload-artifact@v2
        with:
          name: generate-production
          path: dist/
          retention-days: 5

  deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: generate
    name: 'Deploy to Netlify'
    steps:
      # BOILERPLATE - BEGIN
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ./.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: ./.github/actions/boilerplate
      # BOILERPLATE - END

      - uses: actions/download-artifact@v2
        with:
          name: generate-production
          path: dist/
      - uses: jsmrcaga/action-netlify-deploy@v1.7.1
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_TO_PROD: true
          NETLIFY_DEPLOY_MESSAGE: "Prod deploy v${{ github.ref }}"
          build_command: false
          build_directory: "./dist"

